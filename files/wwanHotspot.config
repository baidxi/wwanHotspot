#!/bin/sh

#  wwanHotspot
#
#  Wireless WAN Hotspot management application for OpenWrt routers.
#  $Revision: 1.11 $
#
#  Copyright (C) 2017-2018 Jordi Pujol <jordipujolp AT gmail DOT com>
#
#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 3, or (at your option)
#  any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program; if not, write to the Free Software
#  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
#************************************************************************

# Enable debug when string is not null.
# Log file is /var/log/wwanHotspot
# Set to "xtrace" to also log shell commands on /var/log/wwanHotspot.xtrace
Debug="y"

# Enable automatic scan when string is not null.
# Will automatically scan only when wan interface is down.
# Must be set to "allways" for continously auto scan on every
#    SleepScanAuto interval (not recommended).
ScanAuto="y"

# Default time interval to wait between scans, in seconds
Sleep=20

# when ScanAuto is "allways" wait more time between scans
SleepScanAuto="$(($Sleep*15))"

# number of times that a connection to a hotspot must fail to
# blacklist it.
# Set to zero when hotspots should not be automatically blacklisted.
# The blacklist status of every hotspot will be reset when
# configuration is reloaded.
BlackList=3

# Check that ip routing is enabled in the hotspot's connection
# and also we can ping the address in netX_verify
VerifyConnections="y"

# Connect to this list of networks.
# An ssid with no name marks the end of the list.
# the values are taken from a manually configured connection issuing the
# following commands:
#    uci -q get wireless.@wifi-iface[1].ssid
#    uci -q get wireless.@wifi-iface[1].encryption
#    uci -q get wireless.@wifi-iface[1].key
# netX_ssid is the real ssid
# netX_hidden is an indicator or a value,
#    - false when unset or null string
#    - true when set to y
#    - the value that is listed by "iw wlan0 scan" instead of
#      the real ssid for a hotspot.
# netX_blacklist is an indicator
#    - false when unset or null string
#    - true when set to y, wwanHotspot will not use this hotspot
# netX_verify is an IP address to ping when verifying the connection
# reliability of this hotspot.
# When this list is empty wwanHotspot will use the currently configured
# ssid, and will not modify it. In this case, blacklist and verify
# are disabled.

net1_ssid="wifi1"
net1_encrypt="psk2"
net1_key="2sss3sd305s"
net1_hidden=""
net1_blacklist=""
net1_verify="8.8.8.8"

net2_ssid="MYWLAN"
net2_encrypt="psk"
net2_key="3dfe465gh"
net2_hidden="y"
net2_blacklist=""
net2_verify=""

net3_ssid="DSLwireless"
net3_encrypt="wep"
net3_key="1234567890123"
net3_hidden="\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
net3_blacklist=""
net3_verify=""

net4_ssid="cable"
net4_encrypt="psk2"
net4_key="3027sxdsa2761"
net4_hidden=""
net4_blacklist="y"
net4_verify=""

net5_ssid=""
net5_encrypt=""
net5_key=""
net5_hidden=""
net5_blacklist=""
net5_verify=""

net6_ssid=""
net6_encrypt=""
net6_key=""
net6_hidden=""
net6_blacklist=""
net6_verify=""
